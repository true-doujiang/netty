package com.yhh.netty;

import com.yhh.netty.client.NettyTcpClient;
import com.yhh.netty.server.NettyTcpServer;
import io.netty.channel.ChannelFuture;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class DemoApplication implements CommandLineRunner {

	@Autowired
	NettyTcpServer nettyTcpServer;

	@Autowired
	NettyTcpClient nettyTcpClient;



	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
	}

	@Override
	public void run(String... strings) throws Exception {
		//启动服务端
		ChannelFuture start = nettyTcpServer.start();

		//启动客户端，发送数据
		nettyTcpClient.connect();
		Object msg = "000019061137001137002019080616393000000abc
//		Object msg = "0000";
		nettyTcpClient.sendMsg(msg);

		//服务端管道关闭的监听器并同步阻塞,直到channel关闭,线程才会往下执行,结束进程
		start.channel().closeFuture().syncUninterruptibly();
		System.out.println("over");
	}
}
